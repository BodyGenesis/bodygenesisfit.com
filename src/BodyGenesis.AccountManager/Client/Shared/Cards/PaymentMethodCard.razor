<MudCard Outlined="true">
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudIcon Color="Color.Default" Icon="@(PaymentMethod.Type == PaymentMethodType.BankAccount ? Icons.Material.Filled.AccountBalanceWallet : Icons.Material.Filled.CreditCard)" />
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@PaymentMethod.Type.ToDisplayText()</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Color="Color.Error" Disabled="!CanDelete" Icon="@Icons.Material.Filled.Delete" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudGrid>

            @if (!string.IsNullOrWhiteSpace(PaymentMethod.NameOnCard))
            {
                <MudItem xs="12">
                    <MudText Typo="Typo.h6">@PaymentMethod.NameOnCard</MudText>
                </MudItem>
            }

            <MudItem xs="6">
                <MudText Typo="Typo.caption">@AccountNumberLabel</MudText>
                <MudText Typo="Typo.body1">@PaymentMethod.AccountNumberHint</MudText>
            </MudItem>

            @if (PaymentMethod.Expires)
            {
                <MudItem xs="6">
                    <MudText Typo="Typo.caption">Expiration</MudText>
                    <MudText Typo="Typo.body1">@PaymentMethod.ExpirationDate?.ToString("MMMM yyyy")</MudText>
                </MudItem>
            }

            @if (!string.IsNullOrWhiteSpace(PaymentMethod.RoutingNumber))
            {
                <MudItem xs="6">
                    <MudText Typo="Typo.caption">Routing Number</MudText>
                    <MudText Typo="Typo.body1">@PaymentMethod.RoutingNumber</MudText>
                </MudItem>
            }

        </MudGrid>
    </MudCardContent>
</MudCard>


@code
{
    string AccountNumberLabel => (PaymentMethod.Type == PaymentMethodType.CreditCard) ? "Card Number" : "Account Number";

    [Parameter]
    public bool CanDelete { get; set; } = false;

    [Parameter]
    public PaymentMethodDto PaymentMethod { get; set; } = new PaymentMethodDto();

    [Parameter]
    public EventCallback<PaymentMethodDto> PaymentMethodChanged { get; set; }
}