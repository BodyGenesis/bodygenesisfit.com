@page "/customers/{customerId}"

@inject CustomersApiClient CustomersApi
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudContainer>
    <MudGrid Justify="Justify.Center" Spacing="6">

        <MudItem md="6">
            <MudText Typo="Typo.h4" GutterBottom="true">Personal Information</MudText>
            <MudGrid>

                <MudItem xs="12">
                    <MudTextField T="string" Disabled="!Editing" Label="Name" Required="true" @bind-Value="Customer.Name" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" Disabled="true" Label="Email" @bind-Value="Customer.EmailAddress" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" Disabled="!Editing" Label="Phone" Required="true" @bind-Value="Customer.PhoneNumber" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" Disabled="!Editing" Label="Address" Required="true" @bind-Value="Customer.Address" />
                </MudItem>

                <MudItem xs="4">
                    <MudTextField T="string" Disabled="!Editing" Label="City" Required="true" @bind-Value="Customer.City" />
                </MudItem>

                <MudItem xs="4">
                    <MudTextField T="string" Disabled="!Editing" Label="State" Required="true" @bind-Value="Customer.State" />
                </MudItem>

                <MudItem xs="4">
                    <MudTextField T="string" Disabled="!Editing" Label="Zip Code" Required="true" @bind-Value="Customer.ZipCode" />
                </MudItem>

                <MudItem xs="12">
                    <MudDatePicker Disabled="!Editing" Editable="true" Label="Date of Birth" Required="true" @bind-Date="Customer.DateOfBirth" />
                </MudItem>

                <MudItem xs="12">
                    <MudSelect T="string" Disabled="!Editing" Label="Preferred Location" Required="true" @bind-Value="Customer.PreferredLocation">
                        <MudSelectItem Value="@("New Castle/Shenango")" />
                        <MudSelectItem Value="@("Saxonburg")" />
                    </MudSelect>
                </MudItem>

                <MudItem xs="12">
                    @if (Editing)
                    {
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveChanges">Save Changes</MudButton>
                        <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="CancelEditing">Cancel</MudButton>
                    }

                    else
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="BeginEditing">Edit</MudButton>
                    }
                </MudItem>

            </MudGrid>
        </MudItem>

        <MudItem md="6">
            <MudText Typo="Typo.h4" GutterBottom="true">Membership Information</MudText>
            @if (Customer.CurrentMembershipSubscription is null)
            {
                <div style="display:flex;justify-content:center;align-items:center;">
                    @if (!Customer.CanStartMembership)
                    {
                        <MudText Typo="Typo.body1" Align="Align.Center">Please complete your personal profile before starting a new membership.</MudText>
                    }

                    <MudButton Color="Color.Primary" Disabled="!Customer.CanStartMembership" Variant="Variant.Filled">Start New Membership</MudButton>
                </div>
                
            }

            else
            {
                <MembershipSubscriptionCard MembershipSubscription="Customer.CurrentMembershipSubscription" />
            }
        </MudItem>

        <MudItem xs="12">
            <MudText Typo="Typo.h4" GutterBottom="true">Payment Information</MudText>
            <MudGrid>
                @foreach (var paymentMethod in Customer.PaymentMethods)
                {
                    <MudItem xs="12">
                        <PaymentMethodCard PaymentMethod="paymentMethod" />
                    </MudItem>
                }
            </MudGrid>
        </MudItem>

    </MudGrid>
</MudContainer>

@code
{
    [Parameter]
    public string CustomerId { get; set; } = string.Empty;

    Customer Customer { get; set; } = new Customer();
    string CustomerBackup { get; set; } = string.Empty;
    bool Editing { get; set; } = false;

    protected override async Task OnParametersSetAsync()
    {
        await Refresh();
    }

    void BeginEditing()
    {
        CustomerBackup = System.Text.Json.JsonSerializer.Serialize(Customer);

        Editing = true;
    }

    void CancelEditing()
    {
        Customer = System.Text.Json.JsonSerializer.Deserialize<Customer>(CustomerBackup);

        Editing = false;
    }

    async Task Refresh()
    {
        var maybeCustomer = await CustomersApi.Get(CustomerId, NavigationManager.GetQueryParam<string>("$axis"));

        if (!maybeCustomer.HasValue)
        {
            return;
        }

        Customer = maybeCustomer.Value;
        CustomerBackup = string.Empty;
    }

    async Task SaveChanges()
    {
        Editing = false;

        await CustomersApi.Save(Customer);
        await Refresh();
    }
}